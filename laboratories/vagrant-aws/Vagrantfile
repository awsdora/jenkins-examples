# Load Vagrantfile.setup#
# ref: https://github.com/erran-r7/multiple_vagrantfiles
load File.expand_path('../Vagrantfile.setup', __FILE__)

  Vagrant.configure(2) do |config|
  config.vm.box = "dummy"
  config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
  # setup each machine.
  $ec2_instances.each do |ec2_instance|
    config.vm.define ec2_instance do |config2|

      # custom config block for AWS provider.
      config2.vm.provider :aws do |ec2, override|
        ec2.keypair_name = $keypair_name
        ec2.access_key_id = $access_key_id
        ec2.secret_access_key = $secret_access_key
        ec2.security_groups = $security_groups
        override.ssh.private_key_path = $private_key_path
        ec2.region = "us-east-1"
        ec2.availability_zone = "us-east-1a"
        ec2.ami = "ami-da05a4a0" #canonical ubuntu 16.04 server
        ec2.instance_type = "t2.small"
        override.ssh.username = "ubuntu"
        ec2.tags = {
          'Name'         => "#{ec2_instance}"
        }
      end
    end
  end

  ###################
  # PROVISIONING
  ###################

  # Ensure Python installed for Ansible provision
  config.vm.provision :shell,
    inline: "sudo apt-get install -qqy python"

  config.vm.provision :ansible do |ansible|
    ansible.groups = {
      "docker" => $ec2_instances,
      "jenkins" => ["jenkins-master"]
    }
    ansible.verbose = "vv"
    ansible.playbook = "provisioning/playbook.yml"
    ansible.galaxy_role_file = "provisioning/requirements.yml"
    ansible.galaxy_roles_path = "provisioning/"
  end

  ############################
  # Post-Provisioning: Get IPs
  ############################
  config.trigger.after :up do
    $ec2_instances.each do |ec2_instance|
      puts "#{ec2_instance}:"
      %x["getMachineURLs.sh #{ec2_instance}"]
    end
  end
end
